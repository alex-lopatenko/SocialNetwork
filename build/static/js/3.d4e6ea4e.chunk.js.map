{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","descriptionBlock","postsBlock","posts","item","React","Component","ProfileStatusWithHooks","props","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","react_default","a","createElement","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","_ref","profile","className","s","src","photos","large","ProfileInfo_ProfileStatusWithHooks","Preloader","Post","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPosts","memo","postsElements","toConsumableArray","reverse","map","p","MyPosts_Post_Post","createRef","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","components_Profile_Profile","assign","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.d4e6ea4e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3plAX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2JdA-\",\"posts\":\"MyPosts_posts__3m7g2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1s4XM\"};","import React from 'react';\n\nclass ProfileStatus extends React.Component {\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n\n    activateEditMode = () => {\n        this.setState( {\n            editMode: true\n        } );\n    }\n    deactivateEditMode() {\n        this.setState( {\n            editMode: false\n        } );\n        this.props.updateStatus(this.state.status);\n    }\n\n    onStatusChange = (e) => {\n        this.setState({\n            status: e.currentTarget.value\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n        if (prevProps.status !== this.props.status) {\n            this.setState({\n                status: this.props.status\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {!this.state.editMode &&\n                    <div>\n                        <span onDoubleClick={ this.activateEditMode }>{this.props.status || \"-------\"}</span>\n                    </div>\n                }\n                {this.state.editMode &&\n                    <div>\n                        <input onChange={this.onStatusChange} autoFocus={true}\n                               onBlur={ this.deactivateEditMode.bind(this) }\n                               value={this.state.status}/>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default ProfileStatus;","import React, {useState, useEffect} from 'react';\nimport s from './ProfileInfo.module.css';\n\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect( () => {\n        setStatus(props.status);\n    }, [props.status] );\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n\n    return (\n        <div>\n            { !editMode &&\n            <div>\n                <span onDoubleClick={ activateEditMode }>{props.status || \"-------\"}</span>\n            </div>\n            }\n            {editMode &&\n            <div>\n                <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode }\n                       value={status} />\n            </div>\n            }\n        </div>\n    )\n}\n\n\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} />\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n                   validate={[required, maxLength10]} />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push(\"/login\");\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    render() {\n       // console.log(\"RENDER PROFILE\");\n        return (\n            <Profile {...this.props}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    //console.log('mapStateToProps PROFILE')\n    return ({\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n    })\n}\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n    withRouter\n)(ProfileContainer);\n\n\n\n\n"],"sourceRoot":""}